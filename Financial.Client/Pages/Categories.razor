@page "/Categories"
@using Financial.Shared.Models
@using Financial.Shared.Domains
@inject HttpClient Http

<h3>Manage Categories</h3>
<MudDivider Class="mt-5 mb-5"/>
<div class="row">

    <div class="col-md-6">
        <MudCard Outlined="true">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Categories</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                @if (categoriesList == null)
                {
                    <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
                }
                else
                {
                    <MudTable Items="@categoriesList" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
                        <HeaderContent>
                            <MudTh>Categories Type</MudTh>
                            <MudTh>Category Name</MudTh>
                            <MudTh>Actions</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Type">@context.CategoryType</MudTd>
                            <MudTd DataLabel="Name">@context.CategoryName</MudTd>
                            <MudTd DataLabel="Action"><MudIconButton Link="@($"/TransactionDetail/{context.Id}")" Icon="@Icons.Material.Filled.Favorite" Color="Color.Info" ></MudIconButton><MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="@(() => OpenDeleteDialog(context))" aria-label="delete"></MudIconButton></MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                }
            </MudCardContent>
        </MudCard>
    </div>
    <div class="col-md-6">
        <NewCategoryComponent OnSubmitAddNew="@Refresh"></NewCategoryComponent>
    </div>
</div>

@if (DeleteDialogOpen)
{
    <ModalDialog Title="Are you sure?" Text="Do you want to delete this category?" OnClose="@OnDeleteDialogClose"></ModalDialog>
}


@code {
    private List<Category> categoriesList;
    public bool DeleteDialogOpen { get; set; }
    private Category categoryToDelete;

    protected async override Task OnInitializedAsync()
    {
        await LoadData();
    }

    protected async Task LoadData()
    {
        categoriesList = await Http.GetFromJsonAsync<List<Category>>("api/transaction/GetCategories");
        StateHasChanged();
    }

    private async Task OnDeleteDialogClose(bool accepted)
    {
        if (accepted)
        {
            await Http.DeleteAsync($"api/transaction/RemoveCategory/{categoryToDelete.Id}");
            await LoadData();
            categoryToDelete = null;
        }
        DeleteDialogOpen = false;
    }

    private void OpenDeleteDialog(Category category)
    {
        categoryToDelete = category;
        DeleteDialogOpen = true;
        StateHasChanged();
    }

    protected async void Refresh()
    {
        await LoadData();
    }


}